{"version":3,"file":"static/js/128.2e0dfc98.chunk.js","mappings":"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","sources":["components/DeleteContactButton/DeleteContactButton.jsx","components/EditContactButton/EditContactButton.jsx","components/FriendsList/ContactsItemStyle.styled.js","components/FriendsList/ContactItem.jsx","components/FriendsList/ContactsListStyle.styled.js","components/EditContactModal/EditContactModal.styled.js","components/EditContactModal/EditContactFormStyle.styled.js","components/EditContactModal/EditContactForm.jsx","components/EditContactModal/EditContactModal.jsx","components/FriendsList/MainSpinner.jsx","components/FriendsList/ContactsContainer.styled.js","components/FriendsList/ContactsList.jsx","components/SearchInput/SearchinputStyle.js","components/SearchInput/SearchInput.jsx","components/AddContactForm/FormStyle.styled.js","components/AddContactForm/AddContactForm.jsx","pages/pageStyles/ContactsPageStyle.styled.js","pages/ContactsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { PiSpinnerGap } from 'react-icons/pi';\nimport { getDeleting } from 'redux/contacts/contactsSlice';\nimport { useState } from 'react';\n\nconst DeleteContactButton = ({ userId }) => {\n  const dispatch = useDispatch();\n  const Deleting = useSelector(getDeleting);\n  const [isCurrentButton, setIsCurrentButton] = useState(false);\n\n  const handleDelete = e => {\n    setIsCurrentButton(true);\n    dispatch(deleteContact(userId)).finally(() => {\n      setIsCurrentButton(false);\n    });\n  };\n\n  return (\n    <button\n      disabled={Deleting}\n      className=\"button-item delete\"\n      onClick={handleDelete}\n    >\n      {Deleting && isCurrentButton ? (\n        <PiSpinnerGap className=\"spinner\" size={24} />\n      ) : (\n        <RiDeleteBin6Line size={24} />\n      )}\n    </button>\n  );\n};\n\nexport default DeleteContactButton;\n\nDeleteContactButton.propTypes = {\n  userId: PropTypes.string.isRequired,\n};","import { useCustomContext } from \"context/userEditContext\";\nimport { FiEdit2 } from \"react-icons/fi\";\n\nconst EditContactButton = ({ id, name, number }) => {\n  const { setId, isShowModal, setToggleShowModal, setName, setNumber } =\n    useCustomContext();\n\n  const handleEditContact = () => {\n    setId(id);\n    setName(name);\n    setNumber(number);\n    setToggleShowModal(!isShowModal);\n  };\n\n  return (\n    <button\n      className=\"button-item edit\"\n      onClick={handleEditContact}\n      type=\"button\"\n    >\n      <FiEdit2 size={20} />\n    </button>\n  );\n};\n\nexport default EditContactButton;","import styled from \"styled-components\";\n\nexport const ContactItemStyle = styled.li`\n  border: 1px solid black;\n  border-radius: 12px;\n  display: flex;\n  padding: 8px 12px;\n  justify-content: space-between;\n  background-color: rgba(192, 192, 192, 0.6);\n\n  .buttons-list {\n    display: flex;\n    column-gap: 16px;\n  }\n\n  .button-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n  }\n  .phone {\n    background-color: #00ff00;\n    color: white;\n  }\n\n  .phone,\n  .edit,\n  .delete {\n    transition: 250ms linear;\n  }\n\n  .phone:hover,\n  .phone:focus,\n  .edit:hover,\n  .edit:focus,\n  .delete:hover,\n  .delete:focus {\n    scale: 1.3;\n  }\n\n  .edit {\n    color: blue;\n    border: none;\n    background-color: rgba(209, 188, 138, 1);\n  }\n  .delete {\n    background-color: red;\n    color: white;\n    border: none;\n  }\n\n  .name {\n    color: tomato;\n    text-transform: capitalize;\n  }\n\n  .number {\n    color: blue;\n  }\n\n  .user-container {\n    text-align: start;\n  }\n`;","import DeleteContactButton from \"components/DeleteContactButton/DeleteContactButton\";\nimport PropTypes from \"prop-types\";\nimport EditContactButton from \"components/EditContactButton/EditContactButton\";\nimport { ContactItemStyle } from \"./ContactsItemStyle.styled\";\nimport { IoMdCall } from \"react-icons/io\";\n\nconst ContactItem = ({ userName, userNumber, id }) => {\n  return (\n    <ContactItemStyle id={id}>\n      <div className=\"user-container\">\n        <p className=\"name\">{userName}</p>\n        <p className=\"number\">{userNumber}</p>\n      </div>\n\n      <ul className=\"buttons-list\">\n        <li>\n          <a\n            className=\"button-item phone\"\n            href={`tel:${userNumber.replace(\"-\", \"\").replace(\" \", \"\")}`}\n          >\n            <IoMdCall size={20} />\n          </a>\n        </li>\n        <li>\n          <EditContactButton id={id} name={userName} number={userNumber} />\n        </li>\n        <li>\n          <DeleteContactButton userId={id} />\n        </li>\n      </ul>\n    </ContactItemStyle>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  userName: PropTypes.string,\n  userNumber: PropTypes.string,\n  id: PropTypes.string,\n};","import styled from \"styled-components\";\n\nconst ContactsListStyled = styled.ul`\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n  margin-top: 8px;\n  background-color: rgba(244, 164, 96, 0.3);\n  border: 1px solid black;\n  padding: 20px 10px;\n  border-radius: 20px;\n`;\n\nexport default ContactsListStyled;","import styled from 'styled-components';\n\nconst EditModalStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  transition: 250ms linear;\n\n  .modal {\n    position: relative;\n    height: 400px;\n    width: 80%;\n    max-height: 95%;\n    position: absolute;\n    background-color: rgba(255, 248, 220, 1);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 20px;\n    padding: 50px 20px;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    .modal {\n      width: 500px;\n    }\n  }\n  .first {\n    color: tomato;\n  }\n\n  .user-info-container {\n    text-align: start;\n    font-size: 20px;\n    margin-bottom: 20px;\n    word-wrap: break-word;\n    max-width: 500px;\n  }\n\n  .user-info-item {\n    color: tomato;\n  }\n\n  .user-info-current {\n    color: blue;\n  }\n\n  h2 {\n    margin-bottom: 20px;\n  }\n\n  .close-btn {\n    position: absolute;\n    right: 30px;\n    top: 18px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: transparent;\n    color: tomato;\n    transition: 250ms linear;\n  }\n\n  .close-btn:hover,\n  .close-btn:focus {\n    color: blue;\n  }\n`;\n\nexport default EditModalStyled;","import styled from 'styled-components';\n\nexport const EditContactFormStyle = styled.form`\n  width: 80%;\n  background-color: rgba(244, 164, 96, 0.3);\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: 30px;\n  padding: 40px 10px;\n  border-radius: 20px;\n  margin-top: 40px;\n  border: 1px solid black;\n  .label-container {\n    width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    display: inline-block;\n  }\n\n  .notify {\n    color: blue;\n  }\n  .invalid {\n    color: red;\n  }\n\n  .invalid,\n  .notify {\n    margin-top: -20px;\n  }\n\n  label {\n    position: absolute;\n    left: 8px;\n    bottom: 50%;\n    transition: 250ms linear;\n    transform: translate(0, 50%);\n    font-size: 14px;\n    color: blue;\n  }\n\n  input:focus + label {\n    transform: translateY(-100%);\n  }\n\n  input:not(:placeholder-shown) + label {\n    transform: translateY(-100%);\n  }\n\n  input {\n    border-radius: 8px;\n    padding-left: 10px;\n    height: 20px;\n  }\n\n  input::placeholder {\n    opacity: 0;\n  }\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 8px;\n    padding: 8px 12px;\n    background-color: blue;\n    color: white;\n    transition: 250ms linear;\n    column-gap: 8px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: tomato;\n  }\n\n  button[disabled] {\n    background-color: gray;\n  }\n`;","import { useCustomContext } from \"context/userEditContext\";\nimport { useEffect, useState } from \"react\";\nimport { editContact } from \"redux/contacts/contactsOperations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContactsList, getIsEditing } from \"redux/contacts/contactsSlice\";\nimport { EditContactFormStyle } from \"./EditContactFormStyle.styled\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport { PiSpinner } from \"react-icons/pi\";\n\nconst EditContactForm = () => {\n  const { name, number, id, isShowModal, setToggleShowModal } =\n    useCustomContext();\n  const [editName, setEditName] = useState(\"\");\n  const [editNumber, setEditNumber] = useState(\"\");\n  const [canSubmit, setCanSubmit] = useState(false);\n  const [invalidMessage, setInvalidMessage] = useState(\"\");\n  const contacts = useSelector(getContactsList);\n  const editing = useSelector(getIsEditing);\n  const [onSubmitClick, setOnSubmitClick] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    if (e.target.name === \"name\") {\n      setEditName(e.target.value);\n    } else {\n      setEditNumber(e.target.value);\n    }\n  };\n\n  useEffect(() => {\n    const checkedEditName = editName.toLowerCase().trim();\n    const checkedEditNumber = editNumber.trim();\n    const checkedName = name.toLowerCase().trim();\n    const checkedNumber = number.trim();\n\n    if (\n      checkedEditName === checkedName &&\n      editNumber.trim() === checkedNumber.trim()\n    ) {\n      setInvalidMessage(`Its current name and number`);\n      setCanSubmit(false);\n    } else if (\n      (checkedEditName === checkedName && !checkedEditNumber) ||\n      (checkedEditNumber === checkedNumber && !checkedEditName)\n    ) {\n      if (checkedEditName === checkedName && !checkedEditNumber) {\n        setInvalidMessage(`You are alredy have this contact name in your book`);\n      } else if (checkedEditNumber === checkedNumber && !checkedEditName) {\n        setInvalidMessage(\n          `You are alredy have this contact number in your book`\n        );\n      }\n      setCanSubmit(false);\n    } else if (checkedEditName && checkedEditName.length < 3) {\n      setInvalidMessage(\"Name should be minimun 3 symbols\");\n      setCanSubmit(false);\n    } else if (checkedEditNumber && checkedEditNumber.length < 5) {\n      setInvalidMessage(\"Number should be minimun 5 symbols\");\n      setCanSubmit(false);\n    } else if (!checkedEditNumber && !checkedEditName) {\n      setInvalidMessage(\"Please edit something\");\n      setCanSubmit(false);\n    } else if (\n      contacts.some(\n        ({ name, number, id: itemId }) =>\n          (name.toLowerCase().trim() === checkedEditName ||\n            number === checkedEditNumber) &&\n          id !== itemId\n      )\n    ) {\n      setInvalidMessage(\"You alredy have contact with this number or name\");\n      setCanSubmit(false);\n    } else if (editName.length > 16) {\n      setCanSubmit(false);\n      setInvalidMessage(\"Contact name should be 16 symbols maximum\");\n    } else if (editNumber.length > 16) {\n      setCanSubmit(false);\n      setInvalidMessage(\"Contact number should be 16 symbols maximum\");\n    } else {\n      setInvalidMessage(\"\");\n      setCanSubmit(true);\n    }\n  }, [contacts, editName, editNumber, id, name, number]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const sendingName = editName ? editName : name;\n    const sendingNumber = editNumber ? editNumber : number;\n\n    dispatch(editContact({ id, name: sendingName, number: sendingNumber }));\n    setOnSubmitClick(true);\n  };\n\n  useEffect(() => {\n    if (!editing && onSubmitClick) {\n      console.log(\"Closing modal...\");\n      setToggleShowModal(!isShowModal);\n    }\n  }, [editing, isShowModal, onSubmitClick, setToggleShowModal]);\n\n  return (\n    <EditContactFormStyle autoComplete=\"off\" onSubmit={handleSubmit}>\n      <div className=\"label-container\">\n        <input\n          placeholder=\"Name\"\n          id=\"edit-name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          name=\"name\"\n          type=\"text\"\n          value={editName}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"edit-name\">Name </label>\n      </div>\n      <div className=\"label-container\">\n        <input\n          placeholder=\"Number\"\n          id=\"edit-number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          name=\"number\"\n          type=\"tel\"\n          value={editNumber}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"edit-number\">Phone</label>\n      </div>\n\n      <button disabled={!canSubmit} type=\"submit\">\n        {editing ? (\n          <PiSpinner className=\"spinner\" size={16} />\n        ) : (\n          <FiEdit2 size={16} />\n        )}\n        Edit\n      </button>\n      <p className={invalidMessage ? \"invalid\" : \"notify\"}>\n        {invalidMessage ? invalidMessage : \"All good. You can edit contact\"}\n      </p>\n    </EditContactFormStyle>\n  );\n};\n\nexport default EditContactForm;","import React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useCustomContext } from \"context/userEditContext\";\nimport EditModalStyled from \"./EditContactModal.styled\";\nimport EditContactForm from \"./EditContactForm\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\n\nconst EditContactModal = () => {\n  const { name, number, isShowModal, setToggleShowModal } = useCustomContext();\n\n  const onBackdrop = (e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    setToggleShowModal(false);\n  };\n\n  useEffect(() => {\n    function onEsc(e) {\n      if (e.code !== \"Escape\") {\n        return;\n      }\n      setToggleShowModal(false);\n    }\n\n    document.body.style.overflow = \"hidden\";\n    const paddingOffSet = window.innerWidth - document.body.offsetWidth + \"px\";\n    document.body.style.paddingRight = paddingOffSet;\n    window.addEventListener(\"keydown\", onEsc);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onEsc);\n      document.body.style.overflow = \"auto\";\n      document.body.style.paddingRight = 0;\n    };\n  }, [setToggleShowModal]);\n\n  const modalRoot = document.getElementById(\"contact-edit-modal-root\") || document.createElement('div');\n  document.body.appendChild(modalRoot);\n\n  return modalRoot\n    ? createPortal(\n        <EditModalStyled onClick={onBackdrop}>\n          <div className=\"modal\">\n            <button\n              type=\"button\"\n              className=\"close-btn\"\n              onClick={() => setToggleShowModal(!isShowModal)}\n            >\n              <AiOutlineCloseCircle size={24} />\n            </button>\n            <h2>\n              <span className=\"first\">Edit </span> user\n            </h2>\n            <ul className=\"user-info-container\">\n              <li>\n                <p className=\"user-info-item\">\n                  Current name:{\" \"}\n                  <span className=\"user-info-current\">{name}</span>\n                </p>\n              </li>\n              <li>\n                <p className=\"user-info-item\">\n                  Current number:{\" \"}\n                  <span className=\"user-info-current\">{number}</span>\n                </p>\n              </li>\n            </ul>\n\n            <EditContactForm />\n          </div>\n        </EditModalStyled>,\n        modalRoot\n      )\n    : null;\n};\n\nexport default EditContactModal;","import React from \"react\";\n\nconst MainSpinner = () => {\n  return (\n    <div id=\"fountainG\">\n      <div id=\"fountainG_1\" className=\"fountainG\"></div>\n      <div id=\"fountainG_2\" className=\"fountainG\"></div>\n      <div id=\"fountainG_3\" className=\"fountainG\"></div>\n      <div id=\"fountainG_4\" className=\"fountainG\"></div>\n      <div id=\"fountainG_5\" className=\"fountainG\"></div>\n      <div id=\"fountainG_6\" className=\"fountainG\"></div>\n      <div id=\"fountainG_7\" className=\"fountainG\"></div>\n      <div id=\"fountainG_8\" className=\"fountainG\"></div>\n    </div>\n  );\n};\n\nexport default MainSpinner;","import styled from \"styled-components\";\n\nexport const ContactsContainerStyle = styled.div`\n  .error {\n    color: red;\n  }\n\n  .notification {\n    color: tomato;\n    margin-top: 20px;\n  }\n  #fountainG {\n    position: relative;\n    width: 234px;\n    height: 28px;\n    margin: auto;\n    top: 20px;\n  }\n\n  .fountainG {\n    position: absolute;\n    top: 0;\n    background-color: transparent;\n    width: 28px;\n    height: 28px;\n    animation-name: bounce_fountainG;\n    -o-animation-name: bounce_fountainG;\n    -ms-animation-name: bounce_fountainG;\n    -webkit-animation-name: bounce_fountainG;\n    -moz-animation-name: bounce_fountainG;\n    animation-duration: 0.775s;\n    -o-animation-duration: 0.775s;\n    -ms-animation-duration: 0.775s;\n    -webkit-animation-duration: 0.775s;\n    -moz-animation-duration: 0.775s;\n    animation-iteration-count: infinite;\n    -o-animation-iteration-count: infinite;\n    -ms-animation-iteration-count: infinite;\n    -webkit-animation-iteration-count: infinite;\n    -moz-animation-iteration-count: infinite;\n    animation-direction: normal;\n    -o-animation-direction: normal;\n    -ms-animation-direction: normal;\n    -webkit-animation-direction: normal;\n    -moz-animation-direction: normal;\n    transform: scale(0.3);\n    -o-transform: scale(0.3);\n    -ms-transform: scale(0.3);\n    -webkit-transform: scale(0.3);\n    -moz-transform: scale(0.3);\n    border-radius: 19px;\n    -o-border-radius: 19px;\n    -ms-border-radius: 19px;\n    -webkit-border-radius: 19px;\n    -moz-border-radius: 19px;\n  }\n\n  #fountainG_1 {\n    left: 0;\n    animation-delay: 0.316s;\n    -o-animation-delay: 0.316s;\n    -ms-animation-delay: 0.316s;\n    -webkit-animation-delay: 0.316s;\n    -moz-animation-delay: 0.316s;\n  }\n\n  #fountainG_2 {\n    left: 29px;\n    animation-delay: 0.3925s;\n    -o-animation-delay: 0.3925s;\n    -ms-animation-delay: 0.3925s;\n    -webkit-animation-delay: 0.3925s;\n    -moz-animation-delay: 0.3925s;\n  }\n\n  #fountainG_3 {\n    left: 58px;\n    animation-delay: 0.469s;\n    -o-animation-delay: 0.469s;\n    -ms-animation-delay: 0.469s;\n    -webkit-animation-delay: 0.469s;\n    -moz-animation-delay: 0.469s;\n  }\n\n  #fountainG_4 {\n    left: 88px;\n    animation-delay: 0.5455s;\n    -o-animation-delay: 0.5455s;\n    -ms-animation-delay: 0.5455s;\n    -webkit-animation-delay: 0.5455s;\n    -moz-animation-delay: 0.5455s;\n  }\n\n  #fountainG_5 {\n    left: 117px;\n    animation-delay: 0.622s;\n    -o-animation-delay: 0.622s;\n    -ms-animation-delay: 0.622s;\n    -webkit-animation-delay: 0.622s;\n    -moz-animation-delay: 0.622s;\n  }\n\n  #fountainG_6 {\n    left: 146px;\n    animation-delay: 0.6985s;\n    -o-animation-delay: 0.6985s;\n    -ms-animation-delay: 0.6985s;\n    -webkit-animation-delay: 0.6985s;\n    -moz-animation-delay: 0.6985s;\n  }\n\n  #fountainG_7 {\n    left: 175px;\n    animation-delay: 0.775s;\n    -o-animation-delay: 0.775s;\n    -ms-animation-delay: 0.775s;\n    -webkit-animation-delay: 0.775s;\n    -moz-animation-delay: 0.775s;\n  }\n\n  #fountainG_8 {\n    left: 205px;\n    animation-delay: 0.8615s;\n    -o-animation-delay: 0.8615s;\n    -ms-animation-delay: 0.8615s;\n    -webkit-animation-delay: 0.8615s;\n    -moz-animation-delay: 0.8615s;\n  }\n\n  @keyframes bounce_fountainG {\n    0% {\n      transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-o-keyframes bounce_fountainG {\n    0% {\n      -o-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -o-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-ms-keyframes bounce_fountainG {\n    0% {\n      -ms-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -ms-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-webkit-keyframes bounce_fountainG {\n    0% {\n      -webkit-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -webkit-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n\n  @-moz-keyframes bounce_fountainG {\n    0% {\n      -moz-transform: scale(1);\n      background-color: rgb(38, 0, 252);\n    }\n\n    100% {\n      -moz-transform: scale(0.3);\n      background-color: rgb(255, 255, 255);\n    }\n  }\n`;","import ContactItem from './ContactItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactsListStyled from './ContactsListStyle.styled';\nimport {\n  getContactsList,\n  getLoading,\n  getError,\n} from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\nimport { useEffect } from 'react';\nimport { getIsLoggedIn } from 'redux/auth/authSelectors';\nimport EditContactModal from 'components/EditContactModal/EditContactModal';\nimport { useCustomContext } from 'context/userEditContext';\nimport MainSpinner from './MainSpinner';\nimport { ContactsContainerStyle } from './ContactsContainer.styled';\nimport { GrFormNextLink, GrFormPreviousLink } from 'react-icons/gr';\nimport ReactPaginate from 'react-paginate';\nimport { useState } from 'react';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContactsList);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const context = useCustomContext();\n  const loading = useSelector(getLoading);\n  const [visibleContacts, setVisibleContacts] = useState([]);\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  const itemsPerPage = 5;\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    setVisibleContacts(\n      contacts\n        ? [\n            ...contacts\n              .filter(\n                contact =>\n                  contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n                  contact.number.toLowerCase().includes(filter.toLowerCase())\n              )\n              .sort(({ name: firstName }, { name: secondName }) =>\n                firstName.localeCompare(secondName)\n              ),\n          ]\n        : []\n    );\n  }, [contacts, filter]);\n\n  useEffect(() => {\n    const paginationList = document.querySelector('.pagination-list');\n    const firstPage = paginationList?.firstElementChild.nextSibling;\n    const endOffset = itemOffset + itemsPerPage;\n\n    console.log(endOffset);\n    if (endOffset === itemsPerPage) {\n      firstPage?.classList.add('active');\n    } else {\n      firstPage?.classList.remove('active');\n    }\n\n    setCurrentItems(visibleContacts?.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(visibleContacts?.length / itemsPerPage));\n\n    if (\n      visibleContacts.length <=\n        Math.ceil(visibleContacts?.length / itemsPerPage) * itemsPerPage &&\n      itemOffset ===\n        Math.ceil(visibleContacts?.length / itemsPerPage) * itemsPerPage\n    ) {\n      setItemOffset(0);\n      firstPage?.classList.add('active');\n    }\n  }, [itemOffset, itemsPerPage, visibleContacts]);\n\n  const handlePageClick = event => {\n    const newOffset = (event.selected * itemsPerPage) % visibleContacts?.length;\n\n    setItemOffset(newOffset);\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  if (error) {\n    return (\n      <ContactsContainerStyle>\n        <h2 className=\"error\">{error}</h2>;\n      </ContactsContainerStyle>\n    );\n  }\n\n  if (loading) {\n    return (\n      <ContactsContainerStyle>\n        <MainSpinner />\n      </ContactsContainerStyle>\n    );\n  }\n\n  if (contacts.length === 0) {\n    return (\n      <ContactsContainerStyle>\n        <h2 className=\"notification\">\n          You haven't any contacts. Please add contacts to your phonebook\n        </h2>\n      </ContactsContainerStyle>\n    );\n  }\n\n  if (filter && visibleContacts.length === 0) {\n    return (\n      <ContactsContainerStyle>\n        <h2 className=\"notification\">\n          We didn't find any contacts according your search\n        </h2>\n      </ContactsContainerStyle>\n    );\n  }\n\n  if (contacts.length > 0) {\n    return (\n      <ContactsContainerStyle>\n        <ContactsListStyled>\n          {context.isShowModal && <EditContactModal />}\n          {currentItems?.map(contact => (\n            <ContactItem\n              userName={contact.name}\n              userNumber={contact.number}\n              id={contact.id}\n              key={contact.id}\n            />\n          ))}\n        </ContactsListStyled>\n        {visibleContacts.length > itemsPerPage && (\n          <ReactPaginate\n            className=\"pagination-list pagination\"\n            nextLabel={<GrFormNextLink size={16} />}\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={3}\n            marginPagesDisplayed={2}\n            pageCount={pageCount}\n            previousLabel={<GrFormPreviousLink size={16} />}\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakLabel=\"...\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"pagination\"\n            activeClassName=\"active\"\n            renderOnZeroPageCount={null}\n          />\n        )}\n      </ContactsContainerStyle>\n    );\n  }\n};\n\nexport default ContactList;","import styled from \"styled-components\";\n\nexport const SearchInputStyle = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: orange;\n  border-radius: 12px;\n  border: 1px solid black;\n  margin-top: 8px;\n  h3 {\n    margin-bottom: 10px;\n  }\n\n  input {\n    height: 20px;\n    border-radius: 12px;\n    padding-left: 8px;\n  }\n  .input-container {\n    position: relative;\n    display: inline;\n  }\n\n  .search-icon {\n    position: absolute;\n    right: 8px;\n    top: 50%;\n    transform: translate(0, -50%);\n  }\n`;","import { changeFilterValue, getFilter } from \"redux/contacts/filterSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SearchInputStyle } from \"./SearchinputStyle\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nconst SearchInput = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <SearchInputStyle>\n      <h3>Search contact by name or number</h3>\n      <div className=\"input-container\">\n        <AiOutlineSearch className=\"search-icon\" size={16} />\n        <input\n          onChange={({ target: { value } }) =>\n            dispatch(changeFilterValue(value))\n          }\n          value={filter}\n        />\n      </div>\n    </SearchInputStyle>\n  );\n};\n\nexport default SearchInput;","import { styled } from \"styled-components\";\n\nconst AddContactFormStyle = styled.form`\n  max-width: 600px;\n  text-align: center;\n  border: 1px solid black;\n  border-radius: 20px;\n  max-height: 300px;\n  min-height: 200px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  row-gap: 40px;\n  display: flex;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n  background-color: rgba(244, 164, 96, 0.3);\n\n  .first {\n    color: blue;\n  }\n\n  .add-contact-label-container {\n    width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    display: inline-block;\n  }\n\n  label {\n    position: absolute;\n    left: 8px;\n    bottom: 50%;\n    transition: 250ms linear;\n    transform: translate(0, 50%);\n    font-size: 14px;\n    color: black;\n  }\n\n  input:focus + label {\n    transform: translateY(-100%);\n  }\n\n  input:not(:placeholder-shown) + label {\n    transform: translateY(-100%);\n  }\n\n  input {\n    border-radius: 8px;\n    padding-left: 10px;\n    height: 20px;\n  }\n\n  input::placeholder {\n    opacity: 0;\n  }\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 8px;\n    padding: 8px 12px;\n    background-color: blue;\n    color: white;\n    transition: 250ms linear;\n    column-gap: 8px;\n    width: 140px;\n    height: 40px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: tomato;\n  }\n\n  button[disabled] {\n    background-color: gray;\n  }\n\n  .notify {\n    margin-top: -20px;\n  }\n\n  .notify.ok {\n    color: blue;\n  }\n\n  .notify.error {\n    color: red;\n  }\n`;\n\nexport default AddContactFormStyle;","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContactsList, getIsAdding } from \"redux/contacts/contactsSlice\";\nimport { addContact } from \"redux/contacts/contactsOperations\";\nimport { PiSpinnerGap } from \"react-icons/pi\";\nimport AddContactFormStyle from \"./FormStyle.styled\";\nimport { toast } from \"react-toastify\";\nimport { GrAdd } from \"react-icons/gr\";\n\nconst AddContactForm = () => {\n  const [number, setNumber] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const contacts = useSelector(getContactsList);\n  const isAdding = useSelector(getIsAdding);\n  const [notify, setNotify] = useState(\"Please, enter contact info to add\");\n  const [canSubmit, setCanSubmit] = useState(false);\n  const dispatch = useDispatch();\n\n  const handlerChangeInput = ({ target }) => {\n    if (target.name === \"name\") {\n      setName(target.value);\n    } else {\n      setNumber(target.value);\n    }\n  };\n\n  useEffect(() => {\n    if (!name && !number) {\n      setNotify(\"Please, enter contact name and number to add\");\n      setCanSubmit(false);\n    } else if (name && name.length < 3) {\n      setNotify(\"Contact name should be 3 symbols minimum\");\n      setCanSubmit(false);\n    } else if (name && name.length > 16) {\n      setNotify(\"Contact name should be 16 symbols maximum\");\n      setCanSubmit(false);\n    } else if (name && !number) {\n      setNotify(\"Please add contact number\");\n      setCanSubmit(false);\n    } else if (name && number.length < 5) {\n      setNotify(\"Contact number should be 5 symbols minimum\");\n      setCanSubmit(false);\n    } else if (name && number.length > 16) {\n      setNotify(\"Contact number should be 16 symbols maximum\");\n      setCanSubmit(false);\n    } else if (number && !name) {\n      setNotify(\"Please, enter contact name\");\n      setCanSubmit(false);\n    } else {\n      setNotify(\"You can add contact to your book\");\n      setCanSubmit(true);\n    }\n  }, [name, number]);\n\n  const handlerSubmitForm = (e) => {\n    e.preventDefault();\n\n    if (\n      contacts?.some(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast.error(`${name} is alredy in your contacts`, {\n        position: \"top-center\",\n        autoClose: 3000,\n      });\n      return;\n    } else if (\n      contacts?.some((contact) => contact.number.trim() === number.trim())\n    ) {\n      toast.error(`The number ${number} is alredy in your contacts`, {\n        position: \"top-center\",\n        autoClose: 3000,\n      });\n      return;\n    }\n    if (canSubmit) {\n      dispatch(addContact({ name, number }));\n\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  return (\n    <AddContactFormStyle autoComplete=\"off\" onSubmit={handlerSubmitForm}>\n      <h2>\n        <span className=\"first\">Add </span>contact\n      </h2>\n      <div className=\"add-contact-label-container\">\n        <input\n          id=\"add-name\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={handlerChangeInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"add-name\">Name</label>\n      </div>\n      <div className=\"add-contact-label-container\">\n        <input\n          id=\"add-number\"\n          placeholder=\"Number\"\n          value={number}\n          onChange={handlerChangeInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <label htmlFor=\"add-number\">Phone </label>\n      </div>\n\n      <button type=\"submit\" disabled={!canSubmit}>\n        {isAdding ? (\n          <PiSpinnerGap className=\"spinner\" size={16} />\n        ) : (\n          <GrAdd size={16} />\n        )}\n        Add contact\n      </button>\n      <p className={`notify ${canSubmit ? \"ok\" : \"error\"}`}>{notify}</p>\n    </AddContactFormStyle>\n  );\n};\n\nexport default AddContactForm;","import styled from \"styled-components\";\n\nexport const ContactsPageStyle = styled.section`\n  padding-top: 40px;\n  padding-bottom: 40px;\n  text-align: center;\n  .container {\n    max-width: 600px;\n    border: 1px solid black;\n    height: 100vh;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-radius: 8px;\n    background-color: rgba(255, 255, 224);\n    min-height: 100vh;\n    height: 100%;\n\n    .page-link {\n      width: 30px;\n      height: 30px;\n      background-color: tomato;\n      display: block;\n      border-radius: 50%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .pagination {\n      display: flex;\n      column-gap: 10px;\n      justify-content: center;\n      margin-top: 20px;\n    }\n\n    .active .page-link {\n      background-color: blue;\n      color: white;\n    }\n  }\n`;","import ContactList from \"../components/FriendsList/ContactsList\";\nimport SearchInput from \"../components/SearchInput/SearchInput\";\nimport AddContactForm from \"../components/AddContactForm/AddContactForm\";\nimport Container from \"components/Container/Container\";\nimport { ContactsPageStyle } from \"./pageStyles/ContactsPageStyle.styled\";\n\nconst ContactsPage = () => {\n  return (\n    <ContactsPageStyle>\n      <Container>\n        <AddContactForm />\n        <SearchInput />\n        <ContactList />\n      </Container>\n    </ContactsPageStyle>\n  );\n};\n\nexport default ContactsPage;"],"names":["_ref","userId","dispatch","useDispatch","Deleting","useSelector","getDeleting","_useState","useState","_useState2","_slicedToArray","isCurrentButton","setIsCurrentButton","_jsx","disabled","className","onClick","e","deleteContact","finally","children","PiSpinnerGap","size","RiDeleteBin6Line","id","name","number","_useCustomContext","useCustomContext","setId","isShowModal","setToggleShowModal","setName","setNumber","type","FiEdit2","ContactItemStyle","styled","_templateObject","_taggedTemplateLiteral","userName","userNumber","_jsxs","href","concat","replace","IoMdCall","EditContactButton","DeleteContactButton","EditContactFormStyle","editName","setEditName","_useState3","_useState4","editNumber","setEditNumber","_useState5","_useState6","canSubmit","setCanSubmit","_useState7","_useState8","invalidMessage","setInvalidMessage","contacts","getContactsList","editing","getIsEditing","_useState9","_useState10","onSubmitClick","setOnSubmitClick","handleChange","target","value","useEffect","checkedEditName","toLowerCase","trim","checkedEditNumber","checkedName","checkedNumber","length","some","itemId","console","log","autoComplete","onSubmit","preventDefault","sendingName","sendingNumber","editContact","placeholder","pattern","onChange","htmlFor","PiSpinner","onEsc","code","document","body","style","overflow","paddingOffSet","window","innerWidth","offsetWidth","paddingRight","addEventListener","removeEventListener","modalRoot","getElementById","createElement","appendChild","createPortal","EditModalStyled","currentTarget","AiOutlineCloseCircle","EditContactForm","ContactsContainerStyle","filter","getFilter","error","getError","isLoggedIn","getIsLoggedIn","context","loading","getLoading","visibleContacts","setVisibleContacts","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","_toConsumableArray","contact","includes","sort","_ref2","firstName","secondName","localeCompare","paginationList","querySelector","firstPage","firstElementChild","nextSibling","endOffset","classList","add","remove","slice","Math","ceil","fetchContacts","MainSpinner","ContactsListStyled","EditContactModal","map","ContactItem","ReactPaginate","nextLabel","GrFormNextLink","onPageChange","event","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","GrFormPreviousLink","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","SearchInputStyle","AiOutlineSearch","changeFilterValue","isAdding","getIsAdding","notify","setNotify","handlerChangeInput","AddContactFormStyle","toast","position","autoClose","addContact","title","required","GrAdd","ContactsPageStyle","Container","AddContactForm","SearchInput","ContactList"],"sourceRoot":""}